# Generated by Django 5.2.4 on 2025-07-25 09:43

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Evidence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evidence_type', models.CharField(choices=[('IMAGE', 'Image'), ('AUDIO', 'Audio'), ('VIDEO', 'Video')], max_length=5)),
                ('file', models.FileField(upload_to='evidence/%Y/%m/%d/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ai_analysis', models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Incident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('incident_type', models.CharField(blank=True, max_length=400, null=True)),
                ('description', models.TextField()),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('device_id', models.CharField(max_length=50)),
                ('device_type', models.CharField(blank=True, max_length=10, null=True)),
                ('device_location', models.CharField(blank=True, max_length=200, null=True)),
                ('neighborhood', models.CharField(blank=True, max_length=100, null=True)),
                ('evidence_file', models.FileField(blank=True, null=True, upload_to='evidence/%Y/%m/%d/')),
                ('evidence_type', models.CharField(blank=True, max_length=10, null=True)),
                ('ai_analysis', models.JSONField(blank=True, null=True)),
                ('severity', models.IntegerField(default=1)),
                ('alert_message', models.TextField(blank=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Neighborhood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=40)),
                ('last_name', models.CharField(max_length=40)),
                ('department', models.CharField(max_length=255)),
                ('role', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AIAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analysis_type', models.CharField(choices=[('SOUND', 'Sound Pattern'), ('MOTION', 'Motion Pattern'), ('FACE', 'Face Recognition'), ('OBJECT', 'Object Detection')], max_length=10)),
                ('results', models.JSONField()),
                ('confidence', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('evidence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analysis.evidence')),
            ],
            options={
                'verbose_name_plural': 'AI Analyses',
            },
        ),
        migrations.AddField(
            model_name='evidence',
            name='incident',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evidences', to='analysis.incident'),
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_level', models.CharField(choices=[('LOW', 'Low Priority'), ('MED', 'Medium Priority'), ('HIGH', 'High Priority'), ('CRITICAL', 'Critical')], max_length=10)),
                ('message', models.TextField()),
                ('is_resolved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('incident', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analysis.incident')),
            ],
        ),
        migrations.CreateModel(
            name='SecurityDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(max_length=50, unique=True)),
                ('device_type', models.CharField(choices=[('CAM', 'Camera'), ('MIC', 'Microphone'), ('MOT', 'Motion Sensor'), ('OTHER', 'Other')], max_length=5)),
                ('location', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('last_ping', models.DateTimeField(blank=True, null=True)),
                ('neighborhood', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analysis.neighborhood')),
            ],
        ),
    ]
